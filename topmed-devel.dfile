ARG itag=latest
ARG r_version=3.5.2
ARG base_name=r-${r_version}-mkl
FROM uwgac/$base_name:$itag

ARG r_version
# ==================
# sequential version
# ==================
# create link to appropriate R
RUN if [ -f /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -f /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$r_version/lib/R/bin/R /usr/local/bin/R && \
      ln -s /usr/local/R-$r_version/lib/R/bin/Rscript /usr/local/bin/Rscript

ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN echo "Building sequential version of  $ANALYSIS_PIPELINE_BRANCH ..."

# install devel topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
  git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git

# execute R script to install topmed packages
RUN cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline && \
    Rscript --vanilla --no-save --slave install_packages.R

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline_s ]; then \
       unlink /usr/local/analysis_pipeline_s; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline /usr/local/analysis_pipeline_s

# ==================
# parallel version
# ==================
ARG p_version=${r_version}p
RUN echo "Building parallel version of  $ANALYSIS_PIPELINE_BRANCH ..."
# create link to appropriate R
RUN if [ -f /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -f /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$p_version/lib/R/bin/R /usr/local/bin/R && \
    ln -s /usr/local/R-$p_version/lib/R/bin/Rscript /usr/local/bin/Rscript

# install devel topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
  git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git

# execute R script to install topmed packages
RUN cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline && \
    Rscript --vanilla --no-save --slave install_packages.R

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline ]; then \
       unlink /usr/local/analysis_pipeline; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline /usr/local/analysis_pipeline

# add the python scripts to enable outside world access
ADD ap2batch.py /usr/local/bin
ADD submit_job.py /usr/local/bin

# install sudo
RUN apt-get update && apt-get install -y sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# add some users
RUN groupadd -g 1002 topmed && \
    useradd -m -s /bin/bash -r -u 1000 -g topmed ubuntu && \
    useradd -m -s /bin/bash -r -u 1001 -g topmed kuraisa && \
    useradd -m -s /bin/bash -r -u 1002 -g topmed levined && \
    useradd -m -s /bin/bash -r -u 1003 -g topmed sdmorris && \
    useradd -m -s /bin/bash -r -u 1010 -g topmed mchughc && \
    useradd -m -s /bin/bash -r -u 1011 -g topmed mconomos && \
    useradd -m -s /bin/bash -r -u 1012 -g topmed amarise && \
    useradd -m -s /bin/bash -r -u 1013 -g topmed avmikh && \
    useradd -m -s /bin/bash -r -u 1014 -g topmed calaurie
RUN adduser ubuntu sudo
RUN adduser kuraisa sudo
RUN adduser levined sudo
RUN adduser sdmorris sudo
RUN adduser mchughc sudo
RUN adduser mconomos sudo
RUN adduser amarise sudo
RUN adduser avmikh sudo
RUN adduser calaurie sudo

# create an .aws directory in everyone's home
RUN mkdir ~/.aws && \
    mkdir /home/ubuntu/.aws && \
    mkdir /home/kuraisa/.aws && \
    mkdir /home/levined/.aws && \
    mkdir /home/sdmorris/.aws && \
    mkdir /home/mchughc/.aws && \
    mkdir /home/mconomos/.aws && \
    mkdir /home/amarise/.aws && \
    mkdir /home/avmikh/.aws && \
    mkdir /home/calaurie/.aws
