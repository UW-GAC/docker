ARG itag=latest
ARG r_version=3.4.3
ARG base_name=topmed-master
FROM uwgac/$base_name:$itag

ARG r_version
# ==================
# sequential version
# ==================
# create link to appropriate R
RUN if [ -f /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -f /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$r_version/lib/R/bin/R /usr/local/bin/R && \
      ln -s /usr/local/R-$r_version/lib/R/bin/Rscript /usr/local/bin/Rscript

ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN echo "Building sequential version of  $ANALYSIS_PIPELINE_BRANCH ..."

# create an R script to install the devel topmed packages
RUN echo '#!/usr/local/bin/Rscript --vanilla --no-save --slave' > /tmp/installtopmed.R && \
  echo 'install.packages("Matrix", rep="https://ftp.osuosl.org/pub/cran/")' >> /tmp/installtopmed.R && \
  echo 'devtools::install_git("git://github.com/zhengxwen/gdsfmt.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/zhengxwen/SeqArray.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/zhengxwen/SNPRelate.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/smgogarten/SeqVarTools.git")' >> /tmp/installtopmed.R && \
  echo 'devtools::install_git("git://github.com/smgogarten/GENESIS.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/UW-GAC/genesis2_tests.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/UW-GAC/genesis2.git")' >> /tmp/installtopmed.R

# execute R script to install devel topmed packages
RUN Rscript /tmp/installtopmed.R

# install devel topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
  git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline && \
  R CMD INSTALL TopmedPipeline

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline_s ]; then \
       unlink /usr/local/analysis_pipeline_s; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline /usr/local/analysis_pipeline_s

# ==================
# parallel version
# ==================
ARG p_version=${r_version}p
RUN echo "Building parallel version of  $ANALYSIS_PIPELINE_BRANCH ..."
# create link to appropriate R
RUN if [ -f /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -f /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$p_version/lib/R/bin/R /usr/local/bin/R && \
    ln -s /usr/local/R-$p_version/lib/R/bin/Rscript /usr/local/bin/Rscript

# create an R script to install the devel topmed packages
RUN echo '#!/usr/local/bin/Rscript --vanilla --no-save --slave' > /tmp/installtopmed.R && \
  echo 'install.packages("Matrix", rep="https://ftp.osuosl.org/pub/cran/")' >> /tmp/installtopmed.R && \
  echo 'devtools::install_git("git://github.com/zhengxwen/gdsfmt.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/zhengxwen/SeqArray.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/zhengxwen/SNPRelate.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/smgogarten/SeqVarTools.git")' >> /tmp/installtopmed.R && \
  echo 'devtools::install_git("git://github.com/smgogarten/GENESIS.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/UW-GAC/genesis2_tests.git")' >> /tmp/installtopmed.R  && \
  echo 'devtools::install_git("git://github.com/UW-GAC/genesis2.git")' >> /tmp/installtopmed.R

# execute R script to install devel topmed packages
RUN Rscript /tmp/installtopmed.R

# install devel topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=devel
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
  git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git && \
  cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline && \
  R CMD INSTALL TopmedPipeline

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline ]; then \
       unlink /usr/local/analysis_pipeline; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline /usr/local/analysis_pipeline

# create links
