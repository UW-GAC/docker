ARG itag=latest
ARG r_version=3.4.3
ARG base_name=r-${r_version}-mkl
FROM uwgac/$base_name:$itag

ARG r_version
# ==================
# sequential version
# ==================
# create link to appropriate R
RUN if [ -d /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -d /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$r_version/lib/R/bin/R /usr/local/bin/R && \
      ln -s /usr/local/R-$r_version/lib/R/bin/Rscript /usr/local/bin/Rscript

ENV ANALYSIS_PIPELINE_BRANCH=master
RUN echo "Building sequential version of  $ANALYSIS_PIPELINE_BRANCH ..."

# install topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=master
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
    cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s && \
    git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git

# execute R script to install topmed packages
RUN cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline && \
    Rscript --vanilla --no-save --slave install_packages.R

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline_s ]; then \
        unlink /usr/local/analysis_pipeline_s; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}s/analysis_pipeline /usr/local/analysis_pipeline_s

# ==================
# parallel version
# ==================
ARG p_version=${r_version}p
# create link to appropriate R
RUN echo "Building parallel version of  $ANALYSIS_PIPELINE_BRANCH ..."
RUN if [ -f /usr/local/bin/R ]; then \
        unlink /usr/local/bin/R; \
    fi
RUN if [ -f /usr/local/bin/Rscript ]; then \
        unlink /usr/local/bin/Rscript; \
    fi
RUN ln -s /usr/local/R-$p_version/lib/R/bin/R /usr/local/bin/R && \
    ln -s /usr/local/R-$p_version/lib/R/bin/Rscript /usr/local/bin/Rscript

# install topmed pipeline
ENV ANALYSIS_PIPELINE_BRANCH=master
RUN mkdir /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
    cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p && \
    git clone -b $ANALYSIS_PIPELINE_BRANCH https://github.com/UW-GAC/analysis_pipeline.git

# execute R script to install topmed packages
RUN cd /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline && \
    Rscript --vanilla --no-save --slave install_packages.R

# create a link analysis_pipeline
RUN if [ -d /usr/local/analysis_pipeline ]; then \
        unlink /usr/local/analysis_pipeline; \
    fi

RUN ln -s /usr/local/src/topmed_${ANALYSIS_PIPELINE_BRANCH}p/analysis_pipeline /usr/local/analysis_pipeline

# add the python scripts to enable outside world access
ADD ap2batch.py /usr/local/bin
ADD submit_job.py /usr/local/bin
