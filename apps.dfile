ARG base_name=ubuntu-18.04-hpc
ARG itag=latest
FROM uwgac/$base_name:$itag


# need curses5
Run apt-get update && apt-get install -y libncurses5-dev
# curl
RUN apt-get update && apt-get install -y curl

ARG APP_BSRC=/usr/local/src
ARG APP_BBIN=/usr/local/bin
# htslib and bcf tools
ARG THE_APP=htslib
RUN if [ ! -f /usr/local/lib/libhts.a ]; then \
        echo ">>> Installing $THE_APP ...";  \
        if [ -d $APP_BSRC/$THE_APP ]; then \
            echo "ERROR: $APP_BSRC/$THE_APP exists";  \
            STOPSIGNAL 9;  \
        fi;  \
        cd $APP_BSRC && \
        git clone --branch=develop git://github.com/samtools/$THE_APP.git; \
    else  \
        "$THE_APP is already installed.";  \
    fi

# bcftools
ARG THE_APP=bcftools
RUN \
    if ! which $THE_APP | grep $THE_APP > /dev/null; then  \
        echo ">>> Installing $THE_APP ...";  \
        if [ -d $APP_BSRC/$THE_APP ]; then  \
            echo "ERROR: $APP_BSRC/$THE_APP exists";  \
            exit 2;  \
        fi;  \
        cd $APP_BSRC && \
        git clone --branch=develop git://github.com/samtools/$THE_APP.git &&  \
        cd $THE_APP &&  \
        make &&  \
        make install;  \
    else  \
        echo "$THE_APP is already installed.";  \
    fi

# sam tools
ARG THE_APP=samtools
RUN \
    if ! which $THE_APP | grep $THE_APP > /dev/null; then  \
        echo ">>> Installing $THE_APP ...";  \
        if [ -d $APP_BSRC/$THE_APP ]; then  \
            echo "ERROR: $APP_BSRC/$THE_APP exists";  \
            exit 2;  \
        fi;  \
        cd $APP_BSRC && \
        git clone --branch=develop git://github.com/samtools/$THE_APP.git &&  \
        cd $THE_APP &&  \
        make &&  \
        make install;  \
    else  \
        echo "$THE_APP is already installed.";  \
    fi

# clone locuszoom; create links
RUN cd /usr/local/src && \
   git clone --single https://github.com/UW-GAC/locuszoom-standalone

RUN if [ -d /usr/local/bin/locuszoom ]; then \
       unlink /usr/local/bin/locuszoom; \
    fi
RUN ln -s /usr/local/src/locuszoom-standalone/bin/locuszoom /usr/local/bin/locuszoom

# install aws cli and boto3
RUN pip install pip --upgrade
RUN pip install awscli --upgrade
RUN pip install boto3 --upgrade

# install python requests
RUN pip install requests

# install unzip
RUN apt-get update && apt-get install -y unzip
# plink
RUN mkdir -p /usr/local/src/plink && \
    cd /usr/local/src/plink  && \
    wget http://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20190304.zip && \
    unzip plink_linux_x86_64_20190304.zip && \
    ln -s /usr/local/src/plink/plink /usr/local/bin/plink && \
    ln -s /usr/local/src/plink/prettify /usr/local/bin/prettify

# king
RUN mkdir -p /usr/local/src/king && \
    cd /usr/local/src/king  && \
    wget http://people.virginia.edu/~wc9c/KING/Ubuntu-king.tar.gz && \
    tar -xf Ubuntu-king.tar.gz && \
    ln -s /usr/local/src/king/king /usr/local/bin/king

# add script to run an analysis interactively
ADD ap2batch.py /usr/local/bin

# add jstats to manage batch jobs
ADD jstats.py /usr/local/bin

# install sudo
RUN apt-get update && apt-get install -y sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# add some users
RUN groupadd -g 1002 topmed && \
  useradd -m -s /bin/bash -r -u 1000 -g topmed ubuntu && \
  useradd -m -s /bin/bash -r -u 1099 -g topmed analyst
RUN adduser ubuntu sudo
RUN adduser analyst sudo

# create an .aws directory in everyone's home
RUN mkdir ~/.aws && \
  mkdir /home/ubuntu/.aws && \
  mkdir /home/analyst/.aws

# set umask to 002 so that files created via batch or docker can easily be managed
# by users on the local computer (topmed-docker)

RUN echo "umask    002" >> /root/.bashrc
RUN echo "umask    002" >> /home/ubuntu/.bashrc
RUN echo "umask    002" >> /home/analyst/.bashrc
